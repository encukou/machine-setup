- hosts: all
  become_user: root
  tasks:
  - name: Set up ~/dev
    file:
      path: '~/dev'
      state: directory
  - name: Clone my GitHub repos
    shell: |
      # Clone anonymously
      cd ~/dev
      git clone https://github.com/encukou/{{ item }}
      cd {{ item }}
    args:
      creates: '~/dev/{{ item }}'
    with_items:
      - bin
      - dotfiles
  - name: Clone CPython
    shell: |
      # Clone anonymously
      cd ~/dev
      git clone https://github.com/python/cpython
    args:
      creates: '~/dev/cpython'

  - name: Create symlinks in $HOME
    file:
      state: link
      src: ~/{{ item.value }}
      dest: ~/{{ item.key }}
    with_dict:
      bin: dev/bin

  - name: Source bashrc-extra at end of .bashrc
    lineinfile:
      create: true
      path: '~/.bashrc'
      line: ". ~/bin/bashrc-extra"

  - name: Update Homebrew
    when: ansible_pkg_mgr == "homebrew"
    community.general.homebrew:
      update_homebrew: true

  - name: Install deps (Homebrew)
    when: ansible_pkg_mgr == "homebrew"
    community.general.homebrew:
      name:
        - pkg-config
        - openssl@3.0
        - xz
        - gdbm
        - tcl-tk
      state: present

  - name: Install deps (apt)
    when: ansible_pkg_mgr == "apt"
    become: yes
    apt:
      state: present
      pkg:
        - build-essential
        - gdb
        - lcov
        - pkg-config
        - libbz2-dev
        - libffi-dev
        - libgdbm-dev
        - libgdbm-compat-dev
        - liblzma-dev
        - libncurses5-dev
        - libreadline6-dev
        - libsqlite3-dev
        - libssl-dev
        - lzma
        - lzma-dev
        - tk-dev
        - uuid-dev
        - zlib1g-dev

  - name: Run configure
    shell: |
      cd ~/dev/cpython
      ./configure --with-pydebug --enable-shared --prefix=$PWD -C
    args:
      creates: '~/dev/cpython/config.cache'
